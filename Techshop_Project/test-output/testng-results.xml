<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="802" started-at="2022-10-10T23:19:42Z" finished-at="2022-10-10T23:19:43Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.smarttechqa.runner.FeatureRunner@2d1ef81a]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="802" started-at="2022-10-10T23:19:42Z" finished-at="2022-10-10T23:19:43Z">
      <class name="com.smarttechqa.runner.FeatureRunner">
        <test-method status="PASS" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:com.smarttechqa.runner.FeatureRunner@2d1ef81a]" name="setUpClass" is-config="true" duration-ms="310" started-at="2022-10-10T23:19:42Z" finished-at="2022-10-10T23:19:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@73163d48]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.smarttechqa.runner.FeatureRunner@2d1ef81a]" name="runScenario" duration-ms="120" started-at="2022-10-10T23:19:42Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-10-10T23:19:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is able to search the products"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing login functionality to the application"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'User clicks on the Search Box and searches for "iphone 11"' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("User clicks on the Search Box and searches for {string}")
public void user_clicks_on_the_search_box_and_searches_for(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User clicks on the Search button")
public void user_clicks_on_the_search_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("User can search for the {string} item")
public void user_can_search_for_the_item(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'User clicks on the Search Box and searches for "iphone 11"' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("User clicks on the Search Box and searches for {string}")
public void user_clicks_on_the_search_box_and_searches_for(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User clicks on the Search button")
public void user_clicks_on_the_search_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("User can search for the {string} item")
public void user_can_search_for_the_item(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:129)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:129)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.smarttechqa.runner.FeatureRunner@2d1ef81a]" name="runScenario" duration-ms="7" started-at="2022-10-10T23:19:42Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-10-10T23:19:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["This scenario tests all the invalid username and password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing Login functionality to the application"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.smarttechqa.runner.FeatureRunner@2d1ef81a]" name="runScenario" duration-ms="8" started-at="2022-10-10T23:19:42Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-10-10T23:19:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["This scenario tests all the invalid username and password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing Login functionality to the application"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.smarttechqa.runner.FeatureRunner@2d1ef81a]" name="runScenario" duration-ms="6" started-at="2022-10-10T23:19:42Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-10-10T23:19:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["This scenario tests all the invalid username and password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing Login functionality to the application"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.smarttechqa.runner.FeatureRunner@2d1ef81a]" name="runScenario" duration-ms="9" started-at="2022-10-10T23:19:42Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-10-10T23:19:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["This scenario tests all the invalid username and password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing Login functionality to the application"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:com.smarttechqa.runner.FeatureRunner@2d1ef81a]" name="tearDownClass" is-config="true" duration-ms="320" started-at="2022-10-10T23:19:42Z" finished-at="2022-10-10T23:19:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.smarttechqa.runner.FeatureRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
